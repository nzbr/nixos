#!@bash@/bin/bash
# code: language=bash tabSize=4

if ! [ -f flake.nix ]; then
  echo "No flake.nix found in the current directory"
  exit 1
fi

if [ -z "${1:-}" ]; then
  echo "No target specified"
  exit 1
fi
if [ -z "${2:-}" ]; then
  echo "No action specified"
  exit 1
fi

set -euxo pipefail

HOSTS="$1"

CONFIG=$(@nixFlakes@/bin/nix-instantiate --eval --strict -E --json "let flake = builtins.getFlake (toString ./.); lib = flake.lib; in with builtins; with lib; mapAttrs (n: v: v.config.nzbr.deployment // (mapAttrs (n': v': v'.config.nzbr.deployment) (filterAttrs (n': v': v' ? config && v'.config ? nzbr && v'.config.nzbr ? deployment) v))) (filterAttrs (n: v: v.config ? nzbr && v.config.nzbr ? deployment) flake.nixosConfigurations)")

IFS=$',' # Split on , instead of whitespace
BUILD=""
for host in $HOSTS; do
  BUILD="$BUILD,.#nixosConfigurations.${host}.config.system.build.toplevel"
done
BUILD=${BUILD:1}

# Build
OUT="$(nix build --no-link --json -vL $BUILD)"

# Copy
NUM=0
for host in $HOSTS; do
  IFS=$' '
  USER=$(echo "$CONFIG" | @jq@/bin/jq -r .${host}.targetUser)
  HOST=$(echo "$CONFIG" | @jq@/bin/jq -r .${host}.targetHost)
  if $(echo "$CONFIG" | @jq@/bin/jq -r .${host}.substituteOnDestination); then
    SUBSTITUTE="-s"
  else
    SUBSTITUTE=""
  fi
  echo $OUT
  STOREPATH=$(echo "$OUT" | @jq@/bin/jq -r ".[${NUM}].outputs.out")
  IFS=$','

  @nixFlakes@/bin/nix copy $SUBSTITUTE --to ssh://${USER}@${HOST} "${STOREPATH}" -vL

  # Activate
  ssh -t ${USER}@${HOST} -- ${STOREPATH}/bin/switch-to-configuration $2

  NUM=$((NUM + 1))
done
